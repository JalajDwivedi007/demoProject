Maven is a powerful project management tool that is based on POM 
(project object model). It is used for projects build, dependency 
and documentation.

It simplifies the build process like ANT. 
But it is too much advanced than ANT.

Maven Lifecycle: 
Below is a representation of the default Maven lifecycle and its 8 
steps: Validate, Compile, Test, Package, Integration test, Verify, 
Install and Deploy.

The default Maven lifecycle consists of 8 major steps or phases for compiling, testing, building and installing a given Java project as specified below:

->Validate: This step validates if the project structure is correct. 
For example â€“ It checks if all the dependencies have been downloaded and are available in the local repository.

->Compile: It compiles the source code, converts the .java files to 
.class and stores the classes in target/classes folder.

->Test: It runs unit tests for the project.

->Package: This step packages the compiled code in distributable format
like JAR or WAR.

->Integration test: It runs the integration tests for the project.

->Verify: This step runs checks to verify that the project is valid 
and meets the quality standards.

->Install: This step installs the packaged code to the local Maven 
repository.

->Deploy: It copies the packaged code to the remote repository for 
sharing it with other developers.

Projects
-> Core java = archtype.quickstart
-> Web project = archtype.web
